
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CCUR CPAR DIF EQUAL FRAC LBREAK MACRO MINUS NUMBER OCUR OPAR PERCENT PLUS STAR SYMBOL UNDERsystem : equation_listequation_list : equationequation_list : equation LBREAK equation_listequation : differential EQUAL expressiondifferential : FRAC OCUR DIF identifier CCUR OCUR DIF identifier CCURfraction : FRAC OCUR expression CCUR OCUR expression CCURexpression : arithexpression : MINUS expressionarith : termarith : arith PLUS termarith : arith MINUS termterm : term STAR factorterm : idlistidlist : factor idlistidlist : factorfactor : fractionfactor : NUMBERfactor : OPAR expression CPARfactor : identifierfactor : PERCENT identifieridentifier : atomatom : SYMBOLatom : MACROidentifier : atom UNDER atomidentifier : atom UNDER NUMBERidentifier : atom UNDER OCUR identifier CCUR'
    
_lr_action_items = {'FRAC':([0,6,7,12,14,16,17,18,19,22,23,24,26,27,29,32,33,39,41,42,48,49,53,],[5,5,21,21,21,-16,-17,21,-19,-21,-22,-23,21,21,21,-20,21,-18,-24,-25,21,-26,-6,]),'$end':([1,2,3,9,10,11,13,14,15,16,17,19,22,23,24,28,30,32,36,37,38,39,41,42,49,53,],[0,-1,-2,-3,-4,-7,-9,-15,-13,-16,-17,-19,-21,-22,-23,-8,-14,-20,-10,-11,-12,-18,-24,-25,-26,-6,]),'LBREAK':([3,10,11,13,14,15,16,17,19,22,23,24,28,30,32,36,37,38,39,41,42,49,53,],[6,-4,-7,-9,-15,-13,-16,-17,-19,-21,-22,-23,-8,-14,-20,-10,-11,-12,-18,-24,-25,-26,-6,]),'EQUAL':([4,54,],[7,-5,]),'OCUR':([5,21,34,44,45,],[8,33,43,47,48,]),'MINUS':([7,11,12,13,14,15,16,17,18,19,22,23,24,30,32,33,36,37,38,39,41,42,48,49,53,],[12,27,12,-9,-15,-13,-16,-17,12,-19,-21,-22,-23,-14,-20,12,-10,-11,-12,-18,-24,-25,12,-26,-6,]),'NUMBER':([7,12,14,16,17,18,19,22,23,24,26,27,29,32,33,34,39,41,42,48,49,53,],[17,17,17,-16,-17,17,-19,-21,-22,-23,17,17,17,-20,17,42,-18,-24,-25,17,-26,-6,]),'OPAR':([7,12,14,16,17,18,19,22,23,24,26,27,29,32,33,39,41,42,48,49,53,],[18,18,18,-16,-17,18,-19,-21,-22,-23,18,18,18,-20,18,-18,-24,-25,18,-26,-6,]),'PERCENT':([7,12,14,16,17,18,19,22,23,24,26,27,29,32,33,39,41,42,48,49,53,],[20,20,20,-16,-17,20,-19,-21,-22,-23,20,20,20,-20,20,-18,-24,-25,20,-26,-6,]),'SYMBOL':([7,12,14,16,17,18,19,20,22,23,24,25,26,27,29,32,33,34,39,41,42,43,48,49,50,53,],[23,23,23,-16,-17,23,-19,23,-21,-22,-23,23,23,23,23,-20,23,23,-18,-24,-25,23,23,-26,23,-6,]),'MACRO':([7,12,14,16,17,18,19,20,22,23,24,25,26,27,29,32,33,34,39,41,42,43,48,49,50,53,],[24,24,24,-16,-17,24,-19,24,-21,-22,-23,24,24,24,24,-20,24,24,-18,-24,-25,24,24,-26,24,-6,]),'DIF':([8,47,],[25,50,]),'CPAR':([11,13,14,15,16,17,19,22,23,24,28,30,31,32,36,37,38,39,41,42,49,53,],[-7,-9,-15,-13,-16,-17,-19,-21,-22,-23,-8,-14,39,-20,-10,-11,-12,-18,-24,-25,-26,-6,]),'CCUR':([11,13,14,15,16,17,19,22,23,24,28,30,32,35,36,37,38,39,40,41,42,46,49,51,52,53,],[-7,-9,-15,-13,-16,-17,-19,-21,-22,-23,-8,-14,-20,44,-10,-11,-12,-18,45,-24,-25,49,-26,53,54,-6,]),'PLUS':([11,13,14,15,16,17,19,22,23,24,30,32,36,37,38,39,41,42,49,53,],[26,-9,-15,-13,-16,-17,-19,-21,-22,-23,-14,-20,-10,-11,-12,-18,-24,-25,-26,-6,]),'STAR':([13,14,15,16,17,19,22,23,24,30,32,36,37,38,39,41,42,49,53,],[29,-15,-13,-16,-17,-19,-21,-22,-23,-14,-20,29,29,-12,-18,-24,-25,-26,-6,]),'UNDER':([22,23,24,],[34,-22,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'system':([0,],[1,]),'equation_list':([0,6,],[2,9,]),'equation':([0,6,],[3,3,]),'differential':([0,6,],[4,4,]),'expression':([7,12,18,33,48,],[10,28,31,40,51,]),'arith':([7,12,18,33,48,],[11,11,11,11,11,]),'term':([7,12,18,26,27,33,48,],[13,13,13,36,37,13,13,]),'factor':([7,12,14,18,26,27,29,33,48,],[14,14,14,14,14,14,38,14,14,]),'idlist':([7,12,14,18,26,27,33,48,],[15,15,30,15,15,15,15,15,]),'fraction':([7,12,14,18,26,27,29,33,48,],[16,16,16,16,16,16,16,16,16,]),'identifier':([7,12,14,18,20,25,26,27,29,33,43,48,50,],[19,19,19,19,32,35,19,19,19,19,46,19,52,]),'atom':([7,12,14,18,20,25,26,27,29,33,34,43,48,50,],[22,22,22,22,22,22,22,22,22,22,41,22,22,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> system","S'",1,None,None,None),
  ('system -> equation_list','system',1,'p_system','parser.py',18),
  ('equation_list -> equation','equation_list',1,'p_equation_list_single','parser.py',23),
  ('equation_list -> equation LBREAK equation_list','equation_list',3,'p_equation_list_multi','parser.py',28),
  ('equation -> differential EQUAL expression','equation',3,'p_equation','parser.py',33),
  ('differential -> FRAC OCUR DIF identifier CCUR OCUR DIF identifier CCUR','differential',9,'p_differential','parser.py',38),
  ('fraction -> FRAC OCUR expression CCUR OCUR expression CCUR','fraction',7,'p_fraction','parser.py',43),
  ('expression -> arith','expression',1,'p_expression','parser.py',48),
  ('expression -> MINUS expression','expression',2,'p_neg_expression','parser.py',53),
  ('arith -> term','arith',1,'p_arith_term','parser.py',58),
  ('arith -> arith PLUS term','arith',3,'p_arith_plus','parser.py',63),
  ('arith -> arith MINUS term','arith',3,'p_arith_minus','parser.py',68),
  ('term -> term STAR factor','term',3,'p_term_star','parser.py',78),
  ('term -> idlist','term',1,'p_term_idlist','parser.py',83),
  ('idlist -> factor idlist','idlist',2,'p_idlist_multi','parser.py',88),
  ('idlist -> factor','idlist',1,'p_idlist_single','parser.py',93),
  ('factor -> fraction','factor',1,'p_factor_fraction','parser.py',98),
  ('factor -> NUMBER','factor',1,'p_factor_num','parser.py',103),
  ('factor -> OPAR expression CPAR','factor',3,'p_factor_pexpression','parser.py',108),
  ('factor -> identifier','factor',1,'p_factor_symbol','parser.py',113),
  ('factor -> PERCENT identifier','factor',2,'p_factor_symbol_global','parser.py',118),
  ('identifier -> atom','identifier',1,'p_symbol_atom','parser.py',123),
  ('atom -> SYMBOL','atom',1,'p_atom_symbol','parser.py',128),
  ('atom -> MACRO','atom',1,'p_atom_macro','parser.py',133),
  ('identifier -> atom UNDER atom','identifier',3,'p_symbol_comp','parser.py',138),
  ('identifier -> atom UNDER NUMBER','identifier',3,'p_symbol_comp1','parser.py',143),
  ('identifier -> atom UNDER OCUR identifier CCUR','identifier',5,'p_symbol_comp2','parser.py',148),
]
